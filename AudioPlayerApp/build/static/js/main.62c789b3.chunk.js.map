{"version":3,"sources":["context/playerContext.js","components/graphics/Header.js","components/graphics/Graphics.js","components/playlist/Playlist.js","components/playlist/Actions.js","components/Controls.js","context/playerReducer.js","context/types.js","context/songs.js","context/PlayerState.js","AudioPlayer.js","index.js"],"names":["playerContext","createContext","Header","useContext","currentSong","songs","className","Graphics","alt","src","Playlist","SetCurrent","map","song","i","key","onClick","ipcRenderer","window","require","reqData","send","Actions","useState","url","ulrSet","songsSet","useEffect","on","event","arg","prefix","newSongs","s","name","split","value","readOnly","Controls","nextSong","prevSong","repeat","random","playing","toggleRandom","toggleRepeat","togglePlaying","handleEnd","audio","useRef","statevolum","setStateVolum","dur","setDur","currentTime","setCurrentTime","fmtMSS","toggleAudio","current","paused","play","pause","volume","onTimeUpdate","e","target","onCanPlay","duration","onEnded","ref","type","preload","Math","round","id","onChange","q","compute","state","action","data","songsArr","PlayerState","props","initialState","useReducer","playerReducer","dispatch","length","Provider","songArr","children","close","console","log","AudioPlayer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62c789b3.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst playerContext = createContext();\r\n\r\nexport default playerContext;","import React, { useContext } from 'react'\r\nimport playerContext from '../../context/playerContext'\r\n\r\nfunction Header() {\r\n  const { currentSong, songs } = useContext(playerContext)\r\n\r\n  return (\r\n    <header className=\"draggable\">\r\n      <h3>Now Playing: {songs[currentSong][0]}</h3>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nfunction Graphics() {\r\n  return (\r\n    <div className=\"graphics\">\r\n      <img alt=\"graphic\" src=\"https://images.unsplash.com/photo-1470229538611-16ba8c7ffbd7?crop=entropy&cs=tinysrgb&fit=crop&fm=jpg&h=600&ixid=eyJhcHBfaWQiOjF9&ixlib=rb-1.2.1&q=80&w=1000\"></img>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Graphics\r\n","import React, { useContext } from 'react'\r\nimport playerContext from '../../context/playerContext'\r\n\r\nfunction Playlist() {\r\n  const { SetCurrent, currentSong, songs } = useContext(playerContext)\r\n\r\n  return (\r\n    <div className=\"playlist no_drag\">\r\n      <div className=\"header\">\r\n        <i className=\"fas fa-list-ul\"></i>\r\n        <span className=\"pltext\">Play List</span>\r\n      </div>\r\n      <ul className=\"loi\">\r\n        {songs.map((song, i) => (\r\n          <li\r\n            className={'songContainer ' + (currentSong === i ? 'selected' : '')}\r\n            key={i}\r\n            onClick={() => {\r\n              SetCurrent(i)\r\n            }}\r\n          >\r\n            <i className=\"fas fa-music\"></i>\r\n            <span className=\"song\">{song[0]}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Playlist\r\n","import React, { useEffect, useState, useContext } from 'react'\r\nimport playerContext from '../../context/playerContext'\r\n\r\nconst { ipcRenderer } = window.require('electron')\r\n\r\n// Hooks\r\nconst reqData = () => {\r\n  ipcRenderer.send('asynchronous-message', 'Requesting the data')\r\n}\r\n\r\n// Component\r\nfunction Actions() {\r\n  const [url, ulrSet] = useState('')\r\n  const { songsSet } = useContext(playerContext)\r\n  \r\n  useEffect(() => {\r\n    ipcRenderer.on('asynchronous-reply', (event, arg) => {\r\n      // console.log(arg)\r\n      if (!arg[0]) {\r\n        ulrSet(arg[1][0])\r\n        let prefix = arg[1] + '/'\r\n        let newSongs = arg[2].map((s) => {\r\n          return [s.name.split('.')[0], prefix + s.name]\r\n        })\r\n        // console.log('Hey!')\r\n        // console.log(newSongs)\r\n        songsSet(newSongs)\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"actions\">\r\n      <input className=\"path\" onClick={() => reqData()} value={url} readOnly />\r\n      <button onClick={() => reqData()}>\r\n        <i className=\"far fa-folder-open\"></i>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Actions\r\n","import React, { useState, useEffect, useRef, useContext } from 'react'\r\nimport playerContext from '../context/playerContext'\r\n\r\nfunction Controls() {\r\n\r\n  // Global State\r\n  const {\r\n    currentSong,\r\n    songs,\r\n    nextSong,\r\n    prevSong,\r\n    repeat,\r\n    random,\r\n    playing,\r\n    toggleRandom,\r\n    toggleRepeat,\r\n    togglePlaying,\r\n    handleEnd,\r\n\r\n  } = useContext(playerContext)\r\n\r\n  const audio = useRef('audio_tag');\r\n\r\n  // self State\r\n  const [statevolum, setStateVolum] = useState(0.3)\r\n  const [dur, setDur] = useState(0)\r\n  const [currentTime, setCurrentTime] = useState(0)\r\n\r\n  const fmtMSS = (s) => { return (s - (s %= 60)) / 60 + (9 < s ? ':' : ':0') + ~~(s) }\r\n\r\n  const toggleAudio = () => audio.current.paused ? audio.current.play() : audio.current.pause();\r\n\r\n  const handleVolume = (q) => {\r\n    setStateVolum(q);\r\n    audio.current.volume = q;\r\n  }\r\n\r\n  const handleProgress = (e) => {\r\n    let compute = (e.target.value * dur) / 100;\r\n    setCurrentTime(compute);\r\n    audio.current.currentTime = compute\r\n  }\r\n\r\n  useEffect(() => {\r\n    audio.current.volume = statevolum;\r\n    if (playing) { toggleAudio() }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentSong])\r\n\r\n  return (\r\n    <div className=\"controls\">\r\n      <audio\r\n\r\n        onTimeUpdate={(e) => setCurrentTime(e.target.currentTime)}\r\n        onCanPlay={(e) => setDur(e.target.duration)}\r\n        onEnded={handleEnd}\r\n\r\n        ref={audio}\r\n        type=\"audio/mpeg\"\r\n        preload='true'\r\n        src={songs[currentSong][1]} />\r\n      <div className=\"vlme\">\r\n\r\n        <span className=\"volum\"><i className=\"fas fa-volume-down\"></i></span>\r\n        <input value={Math.round(statevolum * 100)} type=\"range\" name=\"volBar\" id=\"volBar\" onChange={(e) => handleVolume(e.target.value / 100)} />\r\n\r\n      </div>\r\n      <div className=\"musicControls\">\r\n        <span className=\"prev\" onClick={prevSong}><i className=\"fas fa-step-backward\"></i></span>\r\n\r\n        <span className=\"play\" onClick={() => { togglePlaying(); toggleAudio(); }}>\r\n          <span className={!playing ? '' : 'hide'}><i className=\"fas fa-play\"></i></span>\r\n          <span className={!playing ? 'hide' : ''}><i className=\"fas fa-pause\"></i></span>\r\n        </span>\r\n\r\n        <span className=\"next\" onClick={nextSong}><i className=\"fas fa-step-forward\"></i></span>\r\n      </div>\r\n      <div className=\"progressb\">\r\n        <span className=\"currentT\">{fmtMSS(currentTime)}</span>\r\n        <input\r\n          onChange={handleProgress}\r\n          value={dur ? (currentTime * 100) / dur : 0}\r\n          type=\"range\" name=\"progresBar\" id=\"prgbar\" />\r\n        <span className=\"totalT\">{fmtMSS(dur)}</span>\r\n\r\n      </div>\r\n      <div className=\"plsoptions\">\r\n\r\n        <span onClick={toggleRandom} className={\"random \" + (random ? 'active' : '')}>\r\n          <i className=\"fas fa-random\"></i>\r\n        </span>\r\n        <span onClick={toggleRepeat} className={\"repeat \" + (repeat ? 'active' : '')}>\r\n          <i className=\"fas fa-redo-alt\"></i>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Controls\r\n","import {\r\n  SET_CURRENT_SONG,\r\n  TOGGLE_RANDOM,\r\n  TOGGLE_REPEAT,\r\n  TOGGLE_PLAYING,\r\n  SET_SONGS_ARRAY,\r\n} from './types'\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_SONGS_ARRAY:\r\n      return {\r\n        ...state,\r\n        songs: action.data,\r\n      }\r\n    case SET_CURRENT_SONG:\r\n      return {\r\n        ...state,\r\n        currentSong: action.data,\r\n        playing: true,\r\n      }\r\n    case TOGGLE_RANDOM:\r\n      return {\r\n        ...state,\r\n        random: action.data,\r\n      }\r\n    case TOGGLE_REPEAT:\r\n      return {\r\n        ...state,\r\n        repeat: action.data,\r\n      }\r\n    case TOGGLE_PLAYING:\r\n      return {\r\n        ...state,\r\n        playing: action.data,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const SET_CURRENT_SONG = 'SET_CURRENT_SONG'\r\nexport const TOGGLE_RANDOM = 'TOGGLE_RANDOM'\r\nexport const TOGGLE_REPEAT = 'TOGGLE_OPTIONS'\r\nexport const TOGGLE_PLAYING = 'TOGGLE_PLAYING'\r\nexport const SET_SONGS_ARRAY = 'SET_SONGS_ARRAY'\r\n","export const songsArr = [\r\n  [\r\n    'The Beaten Path',\r\n    'https://www.youtube.com/audiolibrary_download?vid=e0a7d8421cdacd6f',\r\n  ],\r\n  [\r\n    'Homeroad',\r\n    'https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_09_-_Homeroad.mp3',\r\n  ],\r\n  [\r\n    'Interception',\r\n    'https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_07_-_Interception.mp3',\r\n  ],\r\n  [\r\n    'Sentinel',\r\n    'https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_04_-_Sentinel.mp3',\r\n  ],\r\n  [\r\n    'Great Expectations',\r\n    'https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_05_-_Great_Expectations.mp3',\r\n  ],\r\n  [\r\n    'Downfall',\r\n    'https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_08_-_Downfall.mp3',\r\n  ],\r\n  [\r\n    'Augmentations',\r\n    'https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_01_-_Augmentations.mp3',\r\n  ],\r\n  [\r\n    'Illumination',\r\n    'https://files.freemusicarchive.org/storage-freemusicarchive-org/music/no_curator/Kai_Engel/Satin/Kai_Engel_-_02_-_Illumination.mp3',\r\n  ],\r\n  [\r\n    'Cabaret',\r\n    'https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_10_-_Cabaret.mp3',\r\n  ],\r\n  [\r\n    'Contention',\r\n    'https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_03_-_Contention.mp3',\r\n  ],\r\n  [\r\n    'Dark Alleys',\r\n    'https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_06_-_Dark_Alleys.mp3',\r\n  ],\r\n  [\r\n    'Climb',\r\n    'https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Ziklibrenbib/The_Ghost_in_Your_Piano/The_Ghost_in_your_piano/The_Ghost_in_Your_Piano_-_01_-_Climb.mp3',\r\n  ],\r\n  [\r\n    'Adventure',\r\n    'https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Ziklibrenbib/The_Ghost_in_Your_Piano/The_Ghost_in_your_piano/The_Ghost_in_Your_Piano_-_03_-_Adventure.mp3',\r\n  ],\r\n  [\r\n    'Lullaby',\r\n    'https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Ziklibrenbib/The_Ghost_in_Your_Piano/The_Ghost_in_your_piano/The_Ghost_in_Your_Piano_-_04_-_Lullaby.mp3',\r\n  ],\r\n]\r\n","import React, { useReducer } from 'react'\r\nimport playerContext from './playerContext'\r\nimport playerReducer from './playerReducer'\r\nimport { songsArr } from './songs'\r\n\r\nimport {\r\n  SET_CURRENT_SONG,\r\n  TOGGLE_RANDOM,\r\n  TOGGLE_REPEAT,\r\n  TOGGLE_PLAYING,\r\n  SET_SONGS_ARRAY,\r\n} from './types'\r\n\r\nconst PlayerState = (props) => {\r\n  const initialState = {\r\n    currentSong: 0,\r\n    songs: songsArr,\r\n    repeat: false,\r\n    random: false,\r\n    playing: false,\r\n    audio: null,\r\n  }\r\n  const [state, dispatch] = useReducer(playerReducer, initialState)\r\n\r\n  // Set songs array\r\n  const songsSet = (songArr) =>\r\n    dispatch({ type: SET_SONGS_ARRAY, data: songArr })\r\n  // Set playing state\r\n  const togglePlaying = () =>\r\n    dispatch({ type: TOGGLE_PLAYING, data: state.playing ? false : true })\r\n  // Set current song\r\n  const SetCurrent = (id) => dispatch({ type: SET_CURRENT_SONG, data: id })\r\n\r\n  // Prev song\r\n  const prevSong = () => {\r\n    if (state.currentSong === 0) {\r\n      SetCurrent(state.songs.length - 1)\r\n    } else {\r\n      SetCurrent(state.currentSong - 1)\r\n    }\r\n  }\r\n  // Next song\r\n  const nextSong = () => {\r\n    if (state.currentSong === state.songs.length - 1) {\r\n      SetCurrent(0)\r\n    } else {\r\n      SetCurrent(state.currentSong + 1)\r\n    }\r\n  }\r\n\r\n  // Repeat and Random\r\n  const toggleRepeat = (id) =>\r\n    dispatch({ type: TOGGLE_REPEAT, data: state.repeat ? false : true })\r\n  const toggleRandom = (id) =>\r\n    dispatch({ type: TOGGLE_RANDOM, data: state.random ? false : true })\r\n\r\n  // End of Song\r\n  const handleEnd = () => {\r\n    // Check for random and repeat options\r\n    if (state.random) {\r\n      return dispatch({\r\n        type: SET_CURRENT_SONG,\r\n        data: ~~(Math.random() * state.songs.length),\r\n      })\r\n    } else {\r\n      if (state.repeat) {\r\n        nextSong()\r\n      } else if (state.currentSong === state.songs.length - 1) {\r\n        return\r\n      } else {\r\n        nextSong()\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <playerContext.Provider\r\n      value={{\r\n        currentSong: state.currentSong,\r\n        songs: state.songs,\r\n        repeat: state.repeat,\r\n        random: state.random,\r\n        playing: state.playing,\r\n        audio: state.audio,\r\n        nextSong,\r\n        prevSong,\r\n        SetCurrent,\r\n        toggleRandom,\r\n        toggleRepeat,\r\n        togglePlaying,\r\n        handleEnd,\r\n        songsSet,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </playerContext.Provider>\r\n  )\r\n}\r\n\r\nexport default PlayerState\r\n","import React from 'react'\nimport Header from './components/graphics/Header'\nimport Graphics from './components/graphics/Graphics'\nimport Playlist from './components/playlist/Playlist'\nimport Actions from './components/playlist/Actions'\nimport Controls from './components/Controls'\n\nimport PlayerState from './context/PlayerState'\n\nimport './main.css'\nimport './input.css'\n\nconst close = () => {\n  console.log('Closing the app')\n}\n\nfunction AudioPlayer() {\n  return (\n    <PlayerState>\n      <div className=\"main\">\n        <div className=\"windowCtr\">\n          <span className=\"appName draggable\">ReactWive</span>\n          <span className=\"minW no_drag\" onClick={close}>\n            _\n          </span>\n          <span className=\"closeW no_drag\" onClick={close}>\n            X\n          </span>\n        </div>\n        <div className=\"top\">\n          <div className=\"left\">\n            <Header />\n            <Graphics />\n          </div>\n          <div className=\"right\">\n            <Actions />\n            <Playlist />\n          </div>\n        </div>\n        <Controls />\n      </div>\n    </PlayerState>\n  )\n}\n\nexport default AudioPlayer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AudioPlayer from './AudioPlayer';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AudioPlayer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}